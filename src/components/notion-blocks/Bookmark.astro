---
import createMetascraper from 'metascraper'
import metascraperDescription from 'metascraper-description'
import metascraperImage from 'metascraper-image'
import metascraperTitle from 'metascraper-title'
import { isAmazonURL } from '../../lib/blog-helpers.ts'
import * as interfaces from '../../lib/interfaces.ts'

export interface Props {
  block: interfaces.Block
  urlMap: { [key: string]: string }
}

const { block, urlMap } = Astro.props

const urlString = (block.Bookmark || block.LinkPreview || block.Embed).Url

let url: URL
let metadata: Record<string, string>
try {
  url = new URL(urlString)

  if (!isAmazonURL(url)) {
    const metascraper = createMetascraper([
      metascraperDescription(),
      metascraperImage(),
      metascraperTitle(),
    ])
    const html = urlMap[url.toString()]
    if (html) {
      metadata = await metascraper({ html, url })
    }
  }
} catch (err) {
  console.log(err)
}
---

{
  url && (
    <>
      {isAmazonURL(url) ? (
        <div class="no-metadata">
          <a href={url.toString()}>{url.toString()}</a>
        </div>
      ) : (
        <div class="bookmark">
          <a href={url.toString()} target="_blank" rel="noopener noreferrer">
            <div>
              <div>{metadata && metadata.title}</div>
              <div>{metadata && metadata.description}</div>
              <div>
                <div>
                  <img
                    src={`https://www.google.com/s2/favicons?domain=${url.hostname}`}
                    alt="Favicon of the bookmark site"
                    loading="lazy"
                  />
                </div>
                <div>{url.origin}</div>
              </div>
            </div>
            <div>
              {metadata && metadata.image && (
                <img
                  src={metadata.image}
                  alt="Site image of the bookmark"
                  loading="lazy"
                />
              )}
            </div>
          </a>
        </div>
      )}
    </>
  )
}
