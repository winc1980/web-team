---
import type { SelectProperty } from '../../../lib/interfaces.ts'
import { NUMBER_OF_POSTS_PER_PAGE } from '../../../server-constants.ts'
import {
  getPostsByTag,
  getRankedPosts,
  getAllTags,
  getNumberOfPagesByTag,
} from '../../../lib/notion/client.ts'
import Layout from '../../../layouts/BlogTopLayout.astro'
import NoContents from '../../../components/NoContents.astro'
import PostDate from '../../../components/PostDate.astro'
import PostTags from '../../../components/PostTags.astro'
import PostTitle from '../../../components/PostTitle.astro'
import PostFeaturedImage from '../../../components/PostFeaturedImage.astro'
import PostExcerpt from '../../../components/PostExcerpt.astro'
import ReadMoreLink from '../../../components/ReadMoreLink.astro'
import Pagination from '../../../components/Pagination.astro'
import BlogPostsLink from '../../../components/BlogPostsLink.astro'
import BlogTagsLink from '../../../components/BlogTagsLink.astro'
import '../../../styles/notion-color.css'
import '@/scss/blog.scss'

export async function getStaticPaths() {
  const allTags = await getAllTags()
  return allTags.map((tag: SelectProperty) => ({ params: { tag: tag.name } }))
}

const { tag } = Astro.params

const [posts, rankedPosts, tags, numberOfPages] = await Promise.all([
  getPostsByTag(tag, NUMBER_OF_POSTS_PER_PAGE),
  getRankedPosts(),
  getAllTags(),
  getNumberOfPagesByTag(tag),
])

const currentTag = posts[0].Tags.find((t) => t.name === tag)
---

<Layout title={`Posts in ${tag}`} path={`/posts/tag/${tag}`}>
  <div slot="main">
    <header>
      <div class="tag-container">
        <span class={`tag ${currentTag.color}`}>{tag}</span>
      </div>
    </header>

    {
      posts.length === 0 ? (
        <NoContents contents={posts} />
      ) : (
        posts.map((post) => (
          <div key={post.Slug} class="blog-card">
            <PostFeaturedImage post={post} class="blog-card__img" />
            <div class="blog-card__contents">
              <PostTitle post={post} />
              <PostExcerpt post={post} />
              <PostTags post={post} />
              <PostDate post={post} />
              <ReadMoreLink post={post} />
            </div>
          </div>
        ))
      )
    }

    <Pagination tag={tag} currentPage={1} numberOfPages={numberOfPages} />
  </div>

  <div slot="aside">
    <BlogTagsLink heading="Categories" tags={tags} />
    <BlogPostsLink heading="Recommended" posts={rankedPosts} />
  </div>
</Layout>
