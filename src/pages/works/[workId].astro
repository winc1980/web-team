---
import Layout from '@/layouts/Layout.astro'
import '@/scss/subpage.scss'
import MV from '@/components/Mv.astro'
import WorkCard from '@/components/WorkCard.astro'
import { Image } from 'astro:assets'
import github from '@/assets/images/icon-github.svg'
//microCMS呼び出し
import { getWorks, getWorksDetail } from '@/lib/microcms'

// 詳細記事ページの全パスを取得
export async function getStaticPaths() {
  const response = await getWorks({ fields: ['id'] })
  return response.contents.map((content: any) => ({
    params: {
      workId: content.id,
    },
  }))
}

//記事の詳細情報を取得
const { workId } = Astro.params
const work = await getWorksDetail(workId as string)
const response = await getWorks({
  fields: ['id', 'title', 'pc_image', 'product_category'],
})
/* response.contentsで返ってくる配列をランダムに並び替える */
const shuffledContents = response.contents.sort(() => Math.random() - 0.5)
/* このページで表示する事例を含まない配列を生成 */
const filteredContents = shuffledContents.filter(
  (item) => item.title != work.title
)
const title = ''
const description = ''
const og_image = ''
---

<Layout title={title} , description={description} , og_image={og_image}>
  <main id="works-detail" class="p-works-detail">
    <MV
      title={work.title}
      bgImg="/assets/images/works.JPG"
      items={[
        { text: 'TOP', link: '/' },
        { text: '制作実績', link: '/works' },
        {
          text: work.title,
          link: '',
        },
      ]}
    />
    <section id="works-detail-fv" class="p-works-detail-fv">
      <div class="l-container">
        <div class="p-works-detail-fv__wrapper">
          <div class="p-works-detail-fv__images">
            <Image
              src={work.sp_image.url}
              alt=""
              width={work.sp_image.width}
              height={work.sp_image.height}
              loading="eager"
            />
            <div>
              <Image
                src={work.pc_image.url}
                alt=""
                width={work.pc_image.width}
                height={work.pc_image.height}
                loading="eager"
              />
            </div>
          </div>
        </div>
      </div>
      <div class="l-container-md">
        <div class="p-works-detail-fv__links">
          <a
            href={work.url}
            target="_blank"
            rel="noopener"
            class="hover__opacity">{work.url}</a
          >
          <a href={work.githubLink} target="_blank" rel="noopener">
            <Image src={github} alt="GitHubのアイコン" class="hover__scale" />
          </a>
        </div>
        {
          work.productDetailTables && (
            <div class="p-works-detail-fv__table__wrapper">
              {work.productDetailTables?.map((productDetailTable) => (
                <div class="p-works-detail-fv__table">
                  <h4>{productDetailTable.detailTitle}</h4>
                  <p>{productDetailTable.detailDescription}</p>
                </div>
              ))}
            </div>
          )
        }
      </div>
    </section>
    <section id="works-detail-content" class="sub-page">
      <div class="l-container-md">
        <div set:html={work.content} />
      </div>
    </section>
    <section id="works-detail-contributors" class="p-works-detail-contributors">
      <div class="l-container">
        <h2>Contributors</h2>
        <ul>
          {
            work.contributors?.map((contributor) => (
              <li key={contributor.memberInfo.memberName}>
                <div class="p-works-detail-contributors__profile">
                  <img
                    src={contributor.memberInfo.memberImage.url}
                    alt={contributor.memberInfo.memberName + 'の写真'}
                    loading="lazy"
                    width="100"
                    height="100"
                  />
                  <div class="p-works-detail-contributors__profile__detail">
                    <p>{contributor.role}</p>
                    <h3>{contributor.memberInfo.memberName}</h3>
                  </div>
                </div>
                <p>{contributor.comment}</p>
              </li>
            ))
          }
        </ul>
      </div>
    </section>
    <section id="works-detail-other-works" class="p-works-detail-other-works">
      <div class="l-container">
        <h2>Other Works</h2>
        <ul class="web-team__work-card">
          {
            filteredContents.slice(0, 3).map((content: any) =>
              /* 現在表示されている事例以外3つをランダム表示 */
              content.title != work.title ? (
                <WorkCard
                  id={content.id}
                  imgpath={content.pc_image.url}
                  imgwidth={content.pc_image.width}
                  imgheight={content.pc_image.height}
                  category={content.product_category}
                  title={content.title}
                />
              ) : null
            )
          }
        </ul>
      </div>
    </section>
  </main>
</Layout>
